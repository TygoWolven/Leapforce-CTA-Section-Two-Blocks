---
// Import all components:
import Arrow from "../atoms/icons/Arrow.astro"

// Dynamic content-properties with Astro Props:
const { title, content } = Astro.props;
---

<a href="#">
    <article>
        <div>
            <!-- User input OR Backup input -->
            <h2>{ title  || "Add your title here" }</h2>
            <p>{ content || "Supporting text about the call-to-action goes here." }</p>
        </div>

        <!-- Tabindex to prevent focus on the button, because it already focusses the entire anchor-element. -->
        <button tabindex="-1">
            <Arrow color="var(--white)" />
        </button>
    </article>
</a>

<style>
    a {
        display: flex;
        position: relative;
        border-radius: var(--radius);

        background: url("/images/cta-background.png");
        background-position: center;
        background-size: cover;

        width: 50%;
        height: 515px;
        padding: 32px 24px;

        /* Mobile: */
        @media (max-width: 768px) {
            width: 100%;
            height: 252px;
            padding: 24px 16px;
        }

        &::before {
            content: "";
            position: absolute;
            width: 100%;
            height: 50%;
            border-radius: var(--radius);
            background: linear-gradient(
                rgba(20, 20, 20, 0),
                rgba(20, 20, 20, 1)
            );
            left: 0;
            bottom: 0;
            opacity: 80%;
        }

        
        article {
            display: flex;
            align-items: end;
            justify-content: space-between;
            
            z-index: 1;
            width: 100%;
            color: var(--white);
            
            div {
                p {
                    color: var(--soft-white);
                    margin-top: 7px; /* Margin on the 'optional' paragraph instead of the heading, so when there is no paragraph the alignment is still correct. */
                    opacity: 50%;

                    /* Mobile: */
                    @media (max-width: 768px) {
                        line-height: 24px;
                        margin-top: 8px;
                    }
                }
            }
            
            button {
                display: flex;
                background: none;
                margin-left: 16px; /* Push away text-content so they dont overlap. */
                border-radius: var(--radius);
                border: 2px solid rgba(255, 255, 255, 0.3);
                
                svg {
                    margin: 14px;

                    /* Mobile: */
                    @media (max-width: 768px) {
                        margin: 10px;
                    }
                }
            }
        }

        /* CTA Block hover-state: */
        &:hover {
            article {
                button {
                    border: 2px solid rgba(255, 255, 255, 0.5);
                }
            }
        }

        /* CTA Block focus-state: */
        &:focus {
            article {
                button {
                    border: 2px solid rgba(255, 255, 255, 0.8);
                }
            }
        }
    }
</style>